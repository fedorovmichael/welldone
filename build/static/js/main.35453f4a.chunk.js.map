{"version":3,"sources":["reducers/index.js","store.jsx","actions/index.js","components/NavBar.jsx","components/CategoryList.jsx","components/CategoryEdit.jsx","App.js","index.js"],"names":["initialCategoryState","listCategories","category","id","name","listLocations","currentPage","selectedCategory","newCategoryName","actionType","store","createStore","state","action","type","categorie","cat","filter","c","liCat","push","setCurrentPage","page","setNewCategoryName","setCategoryList","liCategories","NavBar","props","handleMobileMenuClose","setState","mobileMoreAnchorEl","handleMobileMenuOpen","event","currentTarget","handelAddCategory","dispatch","actionFun","history","handelSaveCategory","clCategory","uuid","v1","categoryJson","JSON","stringify","console","log","updateLocalStorage","handelHomeRedirect","handlerRemoveCategory","e","handleEditCategory","handleUpdateCategory","anchorEl","categoryName","key","value","valueJson","localStorage","removeItem","setItem","strCategories","getItem","undefined","parse","this","classes","renderMobileMenu","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","Boolean","onClose","MenuItem","IconButton","aria-label","color","onClick","node","className","grow","AppBar","position","Toolbar","Typography","title","variant","noWrap","sectionDesktop","sectionMobile","aria-controls","aria-haspopup","React","Component","withRouter","connect","withStyles","theme","flexGrow","menuButton","marginRight","spacing","display","breakpoints","up","search","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","searchIcon","height","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","padding","transition","transitions","create","btnLink","btnLinkMobile","CategoryList","handleListItemClick","index","catId","selectedIndex","length","map","i","ListItem","button","selected","listItem","ListItemText","primary","root","List","component","maxWidth","background","paper","marginTop","borderBottom","CategoryEdit","onTextChange","target","TextField","required","label","textField","margin","onChange","App","path","exact","routeProps","ReactDOM","render","document","getElementById"],"mappings":"kqCAAA,IAAMA,EAAuB,CACzBC,eAAgB,GAChBC,SAAU,CAACC,GAAI,GAAIC,KAAM,GAAIC,cAAe,IAC5CC,YAAa,OACbC,iBAAkB,GAClBC,gBAAiB,GACjBC,WAAY,ICHhB,IACeC,EADDC,aDMC,WAAwD,IAAtCC,EAAqC,uDAA7BZ,EAAsBa,EAAO,uCAClE,OAAOA,EAAOC,MACV,IAAK,eACH,OAAO,EAAP,GAAWF,EAAX,CAAkBX,eAAe,GAAD,mBAAMW,EAAMX,gBAAZ,CAA4BY,EAAOE,YAAYT,YAAa,SAC9F,IAAK,mBACH,OAAO,EAAP,GAAWM,EAAX,CAAkBN,YAAaO,EAAOP,cACxC,IAAK,wBACH,OAAO,EAAP,GAAWM,EAAX,CAAkBL,iBAAkBM,EAAON,mBAC7C,IAAK,wBACH,OAAO,EAAP,GAAWK,EAAX,CAAkBJ,gBAAiBK,EAAOL,kBAC5C,IAAK,sBACH,OAAO,EAAP,GAAWI,EAAX,CAAkBX,eAAgBY,EAAOZ,iBAC3C,IAAK,kBACH,OAAO,EAAP,GAAWW,EAAX,CAAkBH,WAAYI,EAAOJ,aACvC,IAAK,sBACD,IAAIO,EAAMJ,EAAMX,eAAegB,QAAO,SAAAC,GAAC,OAAEA,EAAEf,KAAOS,EAAML,oBACxDS,EAAIZ,KAAOQ,EAAMJ,gBACjB,IAAIW,EAAQP,EAAMX,eAAegB,QAAO,SAAAC,GAAC,OAAEA,EAAEf,KAAOS,EAAML,oBAE5D,OADEY,EAAMC,KAAKJ,GACN,EAAP,GAAWJ,EAAX,CAAkBX,eAAgBkB,IACpC,QACE,OAAOP,MEzBV,SAASS,EAAeC,GAC3B,MAAO,CAACR,KAAM,mBAAoBR,YAAagB,GAO5C,SAASC,EAAmBnB,GAC/B,MAAO,CAACU,KAAM,wBAAyBN,gBAAiBJ,GAGrD,SAASoB,EAAgBC,GAC5B,MAAO,CAACX,KAAM,sBAAuBb,eAAgBwB,G,sBCyEnDC,E,YACF,WAAYC,GAAO,IAAD,8BACd,4CAAMA,KAIXC,sBAAwB,WACvB,EAAKC,SAAS,CAACC,mBAAoB,QANjB,EASnBC,qBAAuB,SAAAC,GACtB,EAAKH,SAAS,CAACC,mBAAoBE,EAAMC,iBAVvB,EAapBC,kBAAoB,WAClBxB,EAAMyB,SAASC,EAAyB,QACxC,EAAKT,MAAMU,QAAQjB,KAAK,kBAfN,EAkBpBkB,mBAAqB,WACnB,IACIC,EAAa,CAACpC,GADDqC,IAAKC,KACYrC,KAAM,EAAKuB,MAAMnB,gBAAiBH,cAAe,IACnFK,EAAMyB,SD/GC,CAACrB,KAAM,eAAgBC,UC+GOwB,IACrC,IAAIpB,EAAQ,EAAKQ,MAAM1B,eACvBkB,EAAMC,KAAKmB,GACX,IAAIG,EAAeC,KAAKC,UAAUzB,GAClC0B,QAAQC,IAAI,yBAA0BJ,GACtC,EAAKK,mBAAmB,aAAc5B,GACtC,EAAKQ,MAAMU,QAAQjB,KAAK,MA3BN,EA8BpB4B,mBAAqB,WACnBtC,EAAMyB,SAASC,EAAyB,SACxC,EAAKT,MAAMU,QAAQjB,KAAK,MAhCN,EAmCpB6B,sBAAwB,SAACC,GACvB,IAAIzB,EAAe,EAAKE,MAAM1B,eAAegB,QAAQ,SAAAC,GAAC,OAAIA,EAAEf,KAAO,EAAKwB,MAAMpB,oBAC9EG,EAAMyB,SAASC,EAA0BX,IACzC,EAAKsB,mBAAmB,aAActB,IAtCpB,EAyCpB0B,mBAAqB,WACnBzC,EAAMyB,SAASC,EAAyB,SACxC,EAAKT,MAAMU,QAAQjB,KAAK,mBA3CN,EA8CpBgC,qBAAuB,WAAO,IAAD,EACiC,EAAKzB,MAA1D1B,EADoB,EACpBA,eAAgBM,EADI,EACJA,iBAAkBC,EADd,EACcA,gBACrCQ,EAAMf,EAAegB,QAAO,SAAAC,GAAC,OAAIA,EAAEf,KAAOI,KAAkB,GAChES,EAAIZ,KAAOI,EACX,IAAIW,EAAQlB,EAAegB,QAAO,SAAAC,GAAC,OAAEA,EAAEf,KAAOI,KAC9CY,EAAMC,KAAKJ,GACXN,EAAMyB,SAASC,EAA0BjB,IACzC,EAAK4B,mBAAmB,aAAc5B,GACtC,EAAKQ,MAAMU,QAAQjB,KAAK,MApDpB,EAAKR,MAAQ,CAACyC,SAAU,KAAMvB,mBAAoB,KAAMwB,aAAc,IAFxD,E,gFAyDDC,EAAKC,GACtB,IAAIC,EAAYd,KAAKC,UAAUY,GAC/BE,aAAaC,WAAWJ,GACxBG,aAAaE,QAAQL,EAAKE,K,0CAI1B,IAAII,EAAgBH,aAAaI,QAAQ,cAEzC,GADAjB,QAAQC,IAAI,yBAA0Be,EAAiC,cAAlBA,EAAkD,KAAlBA,GAChE,cAAlBA,GAAoD,OAAlBA,QAA4CE,IAAlBF,EAA4B,CACvFhB,QAAQC,IAAI,yBAA0Be,GACtC,IAAI1C,EAAQwB,KAAKqB,MAAMH,GACvBnD,EAAMyB,SAASC,EAA0BjB,O,+BAIxC,IAAD,SACqC8C,KAAKtC,MAAzCuC,EADD,EACCA,QAAS5D,EADV,EACUA,YADV,EACuBG,WAC7BoC,QAAQC,IAAI,mBAAoBxC,GAChC,IAAM6D,EACA,kBAACC,EAAA,EAAD,CACEf,SAAUY,KAAKrD,MAAMkB,mBACrBuC,aAAc,CAAEC,SAAU,MAAOC,WAAY,SAC7CpE,GAAI,iBACJqE,aAAW,EACXC,gBAAiB,CAAEH,SAAU,MAAOC,WAAY,SAChDG,KAAMC,QAAQV,KAAKrD,MAAMkB,oBACzB8C,QAASX,KAAKrC,uBAEE,SAAhBtB,EACD,6BACC,kBAACuE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,aAAW,eAAeC,MAAM,UAAUC,QAAS,WAAM,EAAK/C,sBACtE,kBAAC,IAAD,OAEJ,4CAEF,kBAAC2C,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,aAAW,gBAAgBC,MAAM,UAAUC,QAAS,WAAM,EAAK9B,uBACvE,kBAAC,IAAD,OAEJ,6CAEF,kBAAC0B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,aAAW,kBAAkBC,MAAM,UAAUC,QAAS,SAACC,GAAS,EAAKjC,sBAAsBiC,KACnG,kBAAC,IAAD,OAEJ,gDAIF,6BACE,kBAACL,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,aAAW,gBAAgBC,MAAM,UAAUC,QAAS,WAAM,EAAKjC,uBACvE,kBAAC,IAAD,OAEJ,oCAEJ,kBAAC6B,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,aAAW,kBAAkBC,MAAM,UAAUC,QAAS,WAAsB,SAAhB3E,EAAyB,EAAKgC,qBAAuB,EAAKc,yBAC9H,kBAAC,IAAD,OAEJ,+CAOd,OADAP,QAAQC,IAAI,gBAAiBxC,GAE3B,yBAAK6E,UAAWjB,EAAQkB,MACtB,kBAACC,EAAA,EAAD,CAAQC,SAAS,UACf,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYL,UAAWjB,EAAQuB,MAAOC,QAAQ,KAAKC,QAAM,GAAzD,eAGA,yBAAKR,UAAWjB,EAAQkB,OACP,SAAhB9E,EACC,yBAAK6E,UAAWjB,EAAQ0B,gBACpB,kBAACd,EAAA,EAAD,CAAYC,aAAW,eAAeC,MAAM,UAAUC,QAAS,WAAM,EAAK/C,sBACtE,kBAAC,IAAD,OAEJ,kBAAC4C,EAAA,EAAD,CAAYC,aAAW,gBAAgBC,MAAM,UAAUC,QAAS,WAAM,EAAK9B,uBACvE,kBAAC,IAAD,OAEJ,kBAAC2B,EAAA,EAAD,CAAYC,aAAW,kBAAkBC,MAAM,UAAUC,QAAS,SAACC,GAAS,EAAKjC,sBAAsBiC,KACnG,kBAAC,IAAD,QAIR,yBAAKC,UAAWjB,EAAQ0B,gBACpB,kBAACd,EAAA,EAAD,CAAYC,aAAW,gBAAgBC,MAAM,UAAUC,QAAS,WAAM,EAAKjC,uBACvE,kBAAC,IAAD,OAEJ,kBAAC8B,EAAA,EAAD,CAAYC,aAAW,gBAAgBC,MAAM,UAAUC,QAAS,WAAsB,SAAhB3E,EAAyB,EAAKgC,qBAAuB,EAAKc,yBAC5H,kBAAC,IAAD,QAIV,yBAAK+B,UAAWjB,EAAQ2B,eACtB,kBAACf,EAAA,EAAD,CACEC,aAAW,YACXe,gBAAe,iBACfC,gBAAc,OACdd,QAAShB,KAAKlC,qBACdiD,MAAM,WAEN,kBAAC,IAAD,UAKPb,O,GA1Kc6B,IAAMC,WA2LZC,cAAWC,aAXF,SAACzF,GAErB,OADAmC,QAAQC,IAAI,UAAWpC,GAChB,CACHJ,YAAaI,EAAMJ,YACnBE,gBAAiBE,EAAMF,gBACvBP,eAAgBS,EAAMT,eACtBM,iBAAkBG,EAAMH,iBACxBE,WAAYC,EAAMD,cAIA0F,CAAyBC,aAhQpC,SAAAC,GAAK,MAAK,CACvBjB,KAAM,CACJkB,SAAU,GAEZC,WAAY,CACVC,YAAaH,EAAMI,QAAQ,IAE7BhB,MAAM,aACJiB,QAAS,QACRL,EAAMM,YAAYC,GAAG,MAAQ,CAC5BF,QAAS,UAGbG,OAAO,aACLvB,SAAU,WACVwB,aAAcT,EAAMU,MAAMD,aAC1BE,gBAAiBC,YAAKZ,EAAMa,QAAQC,OAAOC,MAAO,KAClD,UAAW,CACTJ,gBAAiBC,YAAKZ,EAAMa,QAAQC,OAAOC,MAAO,MAEpDZ,YAAaH,EAAMI,QAAQ,GAC3BY,WAAY,EACZC,MAAO,QACNjB,EAAMM,YAAYC,GAAG,MAAQ,CAC5BS,WAAYhB,EAAMI,QAAQ,GAC1Ba,MAAO,SAGXC,WAAY,CACVD,MAAOjB,EAAMI,QAAQ,GACrBe,OAAQ,OACRlC,SAAU,WACVmC,cAAe,OACff,QAAS,OACTgB,WAAY,SACZC,eAAgB,UAElBC,UAAW,CACT5C,MAAO,WAET6C,WAAW,aACTC,QAASzB,EAAMI,QAAQ,EAAG,EAAG,EAAG,GAChCsB,WAAY1B,EAAM2B,YAAYC,OAAO,SACrCX,MAAO,QACNjB,EAAMM,YAAYC,GAAG,MAAQ,CAC5BU,MAAO,MAGX1B,eAAe,aACbc,QAAS,QACRL,EAAMM,YAAYC,GAAG,MAAQ,CAC5BF,QAAS,SAGbb,cAAc,aACZa,QAAS,QACRL,EAAMM,YAAYC,GAAG,MAAQ,CAC5BF,QAAS,SAGbwB,QAAQ,CACNlD,MAAO,SAETmD,cAAc,CACVzB,QAAS,OACT1B,MAAO,WA+LsCoB,CAAmB1E,K,2BC/P/D0G,E,YAEH,WAAYzG,GAAO,IAAD,8BACd,4CAAMA,KAIZ0G,oBAAsB,SAACrG,EAAOsG,EAAOC,GACnC,EAAK1G,SAAS,CAAC2G,cAAeF,IAC9B5H,EAAMyB,SFtBC,CAACrB,KAAM,wBAAyBP,iBEsBMgI,KALzC,EAAK3H,MAAQ,CAAC4H,cAAe,MAFf,E,sEAUX,IAAD,OACIA,EAAkBvE,KAAKrD,MAAvB4H,cADJ,EAE8BvE,KAAKtC,MAAhCuC,EAFH,EAEGA,QAASjE,EAFZ,EAEYA,eACZwB,EAAe,GAcrB,OAbwB,OAAnBxB,GAA2BA,EAAewI,OAAS,IACpDhH,EAAexB,EAAeyI,KAAI,SAAC1H,EAAK2H,GACpC,OAAQ,kBAACC,EAAA,EAAD,CACDC,QAAM,EACNtF,IAAKvC,EAAIb,GACT2I,SAAUN,IAAkBG,EAC5BxD,UAAWjB,EAAQ6E,SACnB9D,QAAS,SAAAjD,GAAK,OAAI,EAAKqG,oBAAoBrG,EAAO2G,EAAG3H,EAAIb,MACzD,kBAAC6I,EAAA,EAAD,CAAcC,QAASjI,EAAIZ,YAMtC,yBAAK+E,UAAWjB,EAAQgF,MACA,OAAnBjJ,GAA2BA,EAAewI,OAAS,EAChD,6BACI,0CACA,kBAACU,EAAA,EAAD,CAAMC,UAAU,MAAMrE,aAAW,4BAChCtD,IAIR,iD,GAvCeuE,IAAMC,WAmDnBC,cAAWC,aANF,SAACzF,GACrB,MAAO,CACHT,eAAgBS,EAAMT,kBAIJkG,CAAyBC,aAhEpC,SAAAC,GAAK,MAAK,CACvB6C,KAAM,CACJ5B,MAAO,OACP+B,SAAU,IACVrC,gBAAiBX,EAAMa,QAAQoC,WAAWC,MAC1CC,UAAU,GACVnC,WAAW,IAEb0B,SAAU,CACNU,aAAc,qBAuD+BrD,CAAmBgC,K,UCzD9DsB,G,YACF,WAAY/H,GAAO,IAAD,8BACd,4CAAMA,KAIVgI,aAAe,SAACzG,GACdxC,EAAMyB,SAASC,EAA6Bc,EAAE0G,OAAOpG,SAJnD,EAAK5C,MAAQ,CAACR,KAAM,GAAIF,SAAU,IAFpB,E,kFASG,IAAD,EACqC+D,KAAKtC,MAArDlB,EADW,EACXA,WAAYR,EADD,EACCA,eAAgBM,EADjB,EACiBA,iBACnC,GAAkB,SAAfE,EAAsB,CACrB,IAAIP,EAAWD,EAAegB,QAAO,SAAAC,GAAC,OAAEA,EAAEf,KAAOI,KACjDG,EAAMyB,SAASC,EAA6BlC,EAASE,OACrD6D,KAAKpC,SAAS,CAACzB,KAAMF,EAASE,KAAMF,gB,+BAIjC,IAAD,SAC+B+D,KAAKtC,MAAjCuC,EADH,EACGA,QAAS1D,EADZ,EACYA,gBAChB,OACI,yBAAK2E,UAAWjB,EAAQgF,MACtB,kBAACW,GAAA,EAAD,CACIC,UAAQ,EACR3J,GAAG,oBACH4J,MAAM,eACN5E,UAAWjB,EAAQ8F,UACnBC,OAAO,SACPC,SAAU,SAAChF,GAAD,OAAU,EAAKyE,aAAazE,IACtC1B,MAAOhD,S,GA9BEwF,IAAMC,WA8ClBE,gBATS,SAACzF,GACvB,MAAO,CACHF,gBAAiBE,EAAMF,gBACvBC,WAAYC,EAAMD,WAClBR,eAAgBS,EAAMT,eACtBM,iBAAkBG,EAAMH,oBAIf4F,CAAyBC,aAxD3B,SAAAC,GAAK,MAAK,CACrB6C,KAAM,CACJ5B,MAAO,OACP+B,SAAU,IACVrC,gBAAiBX,EAAMa,QAAQoC,WAAWC,MAC1CC,UAAU,GACVnC,WAAW,OAkDyBjB,CAAmBsD,KCtDvDS,I,mBACJ,WAAYxI,GAAO,qEACXA,I,sEAGR,OACE,kBAAC,IAAD,KACE,yBAAKwD,UAAU,OACX,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOiF,KAAK,IAAIC,OAAK,EAACjB,UAAY,SAACkB,GAAD,OAAkB,kBAAC,EAAkBA,MACvE,kBAAC,IAAD,CAAOF,KAAK,iBAAiBhB,UAAW,SAACkB,GAAD,OAAiB,kBAAC,GAAkBA,MAC5E,kBAAC,IAAD,CAAOF,KAAK,gBAAgBhB,UAAW,SAACkB,GAAD,OAAiB,kBAAC,GAAkBA,W,GAZ/DtE,IAAMC,YAuBTE,gBALS,SAACzF,GACvB,MAAO,CACHJ,YAAaI,EAAMJ,eAGV6F,CAAyBgE,ICzBxCI,IAASC,OAAO,kBAAC,IAAD,CAAU9J,MAAOA,GAAO,kBAAC,GAAD,OACpC+J,SAASC,eAAe,W","file":"static/js/main.35453f4a.chunk.js","sourcesContent":["const initialCategoryState = {\r\n    listCategories: [],    \r\n    category: {id: '', name: '', listLocations: []},\r\n    currentPage: 'home',\r\n    selectedCategory: '',\r\n    newCategoryName: '',\r\n    actionType: '',\r\n}\r\n\r\nexport default function category(state = initialCategoryState, action){ \r\n    switch(action.type){\r\n        case \"ADD_CATEGORY\":\r\n          return {...state, listCategories: [...state.listCategories, action.categorie], currentPage: 'home'};\r\n        case \"SET_CURRENT_PAGE\":          \r\n          return {...state, currentPage: action.currentPage};\r\n        case \"SET_SELECTED_CATEGORY\":\r\n          return {...state, selectedCategory: action.selectedCategory}; \r\n        case \"SET_NEW_CATEGORY_NAME\":\r\n          return {...state, newCategoryName: action.newCategoryName};\r\n        case \"SET_CATEGORIES_LIST\":\r\n          return {...state, listCategories: action.listCategories};           \r\n        case \"SET_ACTION_TYPE\":\r\n          return {...state, actionType: action.actionType};\r\n        case \"SET_UPDATE_CATEGORY\":\r\n            let cat = state.listCategories.filter(c=>c.id === state.selectedCategory)\r\n            cat.name = state.newCategoryName\r\n            let liCat = state.listCategories.filter(c=>c.id !== state.selectedCategory)\r\n            liCat.push(cat)\r\n          return {...state, listCategories: liCat};\r\n        default:\r\n          return state;\r\n    }    \r\n }","import { createStore } from 'redux';\r\nimport reducers from './reducers';\r\n\r\nconst store = createStore(reducers);\r\nexport default store;","\r\nexport function addCategory(category){\r\n    return {type: 'ADD_CATEGORY', categorie: category};\r\n}\r\n\r\nexport function setCurrentPage(page){    \r\n    return {type: 'SET_CURRENT_PAGE', currentPage: page};\r\n}\r\n\r\nexport function setSelectedCategory(selectedCategory){\r\n    return {type: 'SET_SELECTED_CATEGORY', selectedCategory: selectedCategory};\r\n}\r\n\r\nexport function setNewCategoryName(name){\r\n    return {type: 'SET_NEW_CATEGORY_NAME', newCategoryName: name};\r\n}\r\n\r\nexport function setCategoryList(liCategories){\r\n    return {type: 'SET_CATEGORIES_LIST', listCategories: liCategories};\r\n}\r\n\r\nexport function setActionType(action){\r\n    return {type: 'SET_ACTION_TYPE', actionType: action};\r\n}\r\n\r\nexport function updateCategory(){\r\n    return {type: 'SET_UPDATE_CATEGORY', update: 'category'};\r\n}\r\n\r\n","import React from 'react';\r\nimport { fade, withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport AddBoxIcon from '@material-ui/icons/AddBox';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport { Link } from 'react-router-dom';\r\nimport store from './../store';\r\nimport * as actionFun from './../actions';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport uuid from 'node-uuid';\r\n\r\n\r\nconst styles = theme => ({\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(3),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    width: theme.spacing(7),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 7),\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: 200,\r\n    },\r\n  },\r\n  sectionDesktop: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'flex',\r\n    },\r\n  },\r\n  sectionMobile: {\r\n    display: 'flex',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  btnLink:{\r\n    color: 'white'\r\n  },\r\n  btnLinkMobile:{\r\n      display: 'flex',\r\n      color: '#000',\r\n  }\r\n});\r\n\r\nclass NavBar extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {anchorEl: null, mobileMoreAnchorEl: null, categoryName: ''}\r\n    }   \r\n\r\n   handleMobileMenuClose = () => {\r\n    this.setState({mobileMoreAnchorEl: null}) \r\n  };\r\n\r\n   handleMobileMenuOpen = event => {\r\n    this.setState({mobileMoreAnchorEl: event.currentTarget})    \r\n  };\r\n  \r\n  handelAddCategory = () => {\r\n    store.dispatch(actionFun.setCurrentPage('new'));    \r\n    this.props.history.push('/category-new');\r\n  }\r\n   \r\n  handelSaveCategory = () => {\r\n    let categoryid = uuid.v1();\r\n    let clCategory = {id: categoryid, name: this.props.newCategoryName, listLocations: []};\r\n    store.dispatch(actionFun.addCategory(clCategory));\r\n    let liCat = this.props.listCategories;\r\n    liCat.push(clCategory)\r\n    let categoryJson = JSON.stringify(liCat)\r\n    console.log(\"update categoryJson 1 \", categoryJson) \r\n    this.updateLocalStorage(\"categories\" ,liCat);\r\n    this.props.history.push('/');\r\n  }\r\n\r\n  handelHomeRedirect = () => {\r\n    store.dispatch(actionFun.setCurrentPage('home'));\r\n    this.props.history.push('/');\r\n  }\r\n  \r\n  handlerRemoveCategory = (e) => {    \r\n    let liCategories = this.props.listCategories.filter( c => c.id !== this.props.selectedCategory)\r\n    store.dispatch(actionFun.setCategoryList(liCategories));\r\n    this.updateLocalStorage(\"categories\", liCategories);\r\n  }\r\n\r\n  handleEditCategory = () => {\r\n    store.dispatch(actionFun.setCurrentPage('edit'));\r\n    this.props.history.push('/category-edit');    \r\n  }\r\n\r\n  handleUpdateCategory = () => {\r\n    const {listCategories, selectedCategory, newCategoryName} = this.props\r\n    let cat = listCategories.filter(c => c.id === selectedCategory)[0]\r\n    cat.name = newCategoryName    \r\n    let liCat = listCategories.filter(c=>c.id !== selectedCategory)    \r\n    liCat.push(cat)    \r\n    store.dispatch(actionFun.setCategoryList(liCat));\r\n    this.updateLocalStorage(\"categories\", liCat);\r\n    this.props.history.push('/');\r\n  }\r\n\r\n  updateLocalStorage(key, value){\r\n    let valueJson = JSON.stringify(value)\r\n    localStorage.removeItem(key)\r\n    localStorage.setItem(key, valueJson)\r\n  } \r\n\r\n  componentDidMount(){  \r\n    let strCategories = localStorage.getItem(\"categories\")\r\n    console.log(\"update categoryJson 1 \", strCategories, strCategories !== 'undefined' , strCategories !== '')\r\n    if(strCategories !== 'undefined' &&  strCategories !== null && strCategories !== undefined){\r\n        console.log(\"update categoryJson 2 \", strCategories)\r\n        let liCat = JSON.parse(strCategories)        \r\n        store.dispatch(actionFun.setCategoryList(liCat));\r\n    }    \r\n  }  \r\n     \r\nrender(){\r\n  const {classes, currentPage, actionType} = this.props\r\n  console.log(\"current page 1: \", currentPage)\r\n  const renderMobileMenu = (    \r\n        <Menu\r\n          anchorEl={this.state.mobileMoreAnchorEl}\r\n          anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n          id={'mainMobileMenu'}\r\n          keepMounted\r\n          transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n          open={Boolean(this.state.mobileMoreAnchorEl)}\r\n          onClose={this.handleMobileMenuClose}\r\n        >\r\n         {currentPage === 'home' ?\r\n         <div> \r\n          <MenuItem>           \r\n            <IconButton aria-label=\"Add category\" color=\"inherit\" onClick={()=>{ this.handelAddCategory() }}>\r\n                <AddBoxIcon />\r\n            </IconButton>\r\n            <p>Add category</p>\r\n          </MenuItem>\r\n          <MenuItem>           \r\n            <IconButton aria-label=\"Edit category\" color=\"inherit\" onClick={()=>{ this.handleEditCategory() }}>\r\n                <EditIcon />\r\n            </IconButton>\r\n            <p>Edit category</p>                   \r\n          </MenuItem>\r\n          <MenuItem>            \r\n            <IconButton aria-label=\"Delete category\" color=\"inherit\" onClick={(node)=>{ this.handlerRemoveCategory(node) }}>\r\n                <DeleteIcon />\r\n            </IconButton>\r\n            <p>Delete category</p>\r\n          </MenuItem>\r\n          </div>\r\n          :\r\n          <div>\r\n            <MenuItem>                \r\n                <IconButton aria-label=\"Edit category\" color=\"inherit\" onClick={()=>{ this.handelHomeRedirect() }}>\r\n                    <HomeIcon />\r\n                </IconButton>\r\n                <p>Home</p> \r\n            </MenuItem>\r\n            <MenuItem>                \r\n                <IconButton aria-label=\"Delete category\" color=\"inherit\" onClick={()=>{ currentPage !== 'edit' ? this.handelSaveCategory() : this.handleUpdateCategory() }}>\r\n                    <SaveIcon />\r\n                </IconButton>\r\n                <p>Save category</p>\r\n            </MenuItem>\r\n          </div>\r\n          }     \r\n        </Menu>\r\n    );  \r\n  console.log(\"curent page: \", currentPage) \r\n  return (\r\n    <div className={classes.grow}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>         \r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            My Location\r\n          </Typography> \r\n          <div className={classes.grow} />\r\n          {currentPage === 'home' ?\r\n            <div className={classes.sectionDesktop}> \r\n                <IconButton aria-label=\"Add category\" color=\"inherit\" onClick={()=>{ this.handelAddCategory() }}>             \r\n                    <AddBoxIcon />             \r\n                </IconButton>          \r\n                <IconButton aria-label=\"Edit category\" color=\"inherit\" onClick={()=>{ this.handleEditCategory() }}>\r\n                    <EditIcon />\r\n                </IconButton>                                \r\n                <IconButton aria-label=\"Delete category\" color=\"inherit\" onClick={(node)=>{ this.handlerRemoveCategory(node) }}> \r\n                    <DeleteIcon />\r\n                </IconButton>                       \r\n            </div>\r\n          :\r\n            <div className={classes.sectionDesktop}>                \r\n                <IconButton aria-label=\"Edit category\" color=\"inherit\" onClick={()=>{ this.handelHomeRedirect() }}>\r\n                    <HomeIcon />\r\n                </IconButton>                           \r\n                <IconButton aria-label=\"Save category\" color=\"inherit\" onClick={()=>{ currentPage !== 'edit' ? this.handelSaveCategory() : this.handleUpdateCategory() }}>             \r\n                    <SaveIcon />             \r\n                </IconButton>                                  \r\n            </div>\r\n          }\r\n          <div className={classes.sectionMobile}>\r\n            <IconButton\r\n              aria-label=\"show more\"\r\n              aria-controls={'mainMobileMenu'}\r\n              aria-haspopup=\"true\"\r\n              onClick={this.handleMobileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMobileMenu}     \r\n    </div>\r\n  );\r\n}\r\n}\r\n\r\nconst mapStateToProps = (store) => { \r\n    console.log(\"store: \", store)    \r\n    return {\r\n        currentPage: store.currentPage, \r\n        newCategoryName: store.newCategoryName,\r\n        listCategories: store.listCategories,\r\n        selectedCategory: store.selectedCategory,\r\n        actionType: store.actionType,\r\n    }\r\n  }\r\n\r\nexport default withRouter(connect(mapStateToProps)(withStyles(styles)(NavBar)))","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport store from './../store';\r\nimport * as actionFun from './../actions';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n    marginTop:30,\r\n    marginLeft:50,\r\n  },\r\n  listItem: {\r\n      borderBottom: 'solid 1px #ddd',\r\n  }\r\n});\r\n\r\n class CategoryList extends React.Component{\r\n  \r\n    constructor(props){\r\n        super(props)\r\n        this.state = {selectedIndex: null}\r\n    }    \r\n\r\n  handleListItemClick = (event, index, catId) => {\r\n    this.setState({selectedIndex: index});\r\n    store.dispatch(actionFun.setSelectedCategory(catId));\r\n  };\r\n\r\n  render(){\r\n      const { selectedIndex } = this.state;\r\n      const {classes, listCategories} = this.props;\r\n      let liCategories = [];\r\n      if(listCategories !== null && listCategories.length > 0){\r\n        liCategories = listCategories.map((cat, i) => {\r\n            return  <ListItem\r\n                   button                                   \r\n                   key={cat.id}\r\n                   selected={selectedIndex === i}\r\n                   className={classes.listItem}\r\n                   onClick={event => this.handleListItemClick(event, i, cat.id)}>\r\n                   <ListItemText primary={cat.name} />\r\n               </ListItem>                            \r\n          })\r\n      }\r\n      \r\n    return (\r\n        <div className={classes.root}>            \r\n            {listCategories !== null && listCategories.length > 0 ?\r\n                <div>\r\n                    <h3>Categories</h3> \r\n                    <List component=\"nav\" aria-label=\"secondary mailbox folder\">\r\n                    {liCategories}\r\n                    </List>\r\n                </div>\r\n            :\r\n             <p>No Categories</p> \r\n            }\r\n        </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (store) => {    \r\n    return {\r\n        listCategories: store.listCategories,\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(withStyles(styles)(CategoryList)))","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport store from './../store';\r\nimport * as actionFun from './../actions';\r\nimport { connect } from 'react-redux';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n      width: '100%',\r\n      maxWidth: 360,\r\n      backgroundColor: theme.palette.background.paper,\r\n      marginTop:30,\r\n      marginLeft:50,\r\n    },\r\n  });\r\n\r\n  class CategoryEdit extends React.Component{\r\n      constructor(props){\r\n          super(props)\r\n          this.state = {name: '', category: {}}\r\n      }\r\n\r\n      onTextChange = (e) =>{\r\n        store.dispatch(actionFun.setNewCategoryName(e.target.value));        \r\n      }\r\n\r\n      componentWillMount(){\r\n        const {actionType, listCategories, selectedCategory} = this.props\r\n        if(actionType === 'edit'){\r\n            let category = listCategories.filter(c=>c.id === selectedCategory)\r\n            store.dispatch(actionFun.setNewCategoryName(category.name));\r\n            this.setState({name: category.name, category})\r\n        }\r\n      }\r\n\r\n      render(){\r\n          const {classes, newCategoryName} = this.props\r\n          return(\r\n              <div className={classes.root}>\r\n                <TextField\r\n                    required\r\n                    id=\"standard-required\"\r\n                    label=\"New Category\"\r\n                    className={classes.textField}\r\n                    margin=\"normal\"\r\n                    onChange={(node) => this.onTextChange(node)}\r\n                    value={newCategoryName}\r\n                />\r\n              </div>\r\n          )\r\n      }\r\n  }\r\n\r\n  const mapStateToProps = (store) => {    \r\n    return {\r\n        newCategoryName: store.newCategoryName,\r\n        actionType: store.actionType,\r\n        listCategories: store.listCategories,\r\n        selectedCategory: store.selectedCategory,       \r\n    }\r\n  }\r\n\r\n  export default connect(mapStateToProps)(withStyles(styles)(CategoryEdit))","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport NavBar from './components/NavBar'\nimport CategoryList from './components/CategoryList'\nimport CategoryEdit from './components/CategoryEdit'\n\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props){\n    super(props)\n  }\n  render(){\n  return (\n    <Router>\n      <div className=\"App\">\n          <NavBar />\n      </div>\n      <Route path='/' exact component={ (routeProps) =>   <CategoryList  {...routeProps}/> } />\n      <Route path='/category-edit' component={(routeProps) =>  <CategoryEdit  {...routeProps}/>} />\n      <Route path='/category-new' component={(routeProps) =>  <CategoryEdit  {...routeProps}/>} />\n    </Router>\n  );\n  }\n}\n\nconst mapStateToProps = (store) => {\n  return {\n      currentPage: store.currentPage,        \n  }\n}\nexport default connect(mapStateToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(<Provider store={store}><App /></Provider>, \n    document.getElementById('root'));\n"],"sourceRoot":""}